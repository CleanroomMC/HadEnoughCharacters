plugins {
    id 'net.minecraftforge.gradle' version '5.+'
    id 'wtf.gofancy.fancygradle' version '1.+'
}

version = "${mc_version}-${proj_version}"
group = "me.towdium.hecharacters"
archivesBaseName = "hecharacters"

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                hecharacters {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                hecharacters {
                    source sourceSets.main
                }
            }
        }
    }
}

fancyGradle {
    patches {
        resources
        coremods
        codeChickenLib
        asm
        mergetool
    }
}

configurations {
    shade
    implementation.extendsFrom shade
}

repositories {
    mavenCentral()
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    maven { url = "modmaven.k-4u.nl" }
    maven { url = 'https://jitpack.io' }
    maven { url = "https://cursemaven.com" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    implementation fg.deobf('curse.maven:had-enough-items-557549:4109510')
    implementation fg.deobf('curse.maven:just-enough-characters-250702:4402463')
    shade files("libs/PinIn-1.6.0-all.jar")
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property "version", version
    inputs.property "mcversion", project.mc_version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.mc_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'me.towdium.hecharacters.core.HechCore'
    }

    from(provider { configurations.shade.collect { it.isDirectory() ? it : zipTree(it) } })
}
